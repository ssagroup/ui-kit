name: 'Build, Test and Deploy'

on:
  pull_request:
    branches: ['main']
  push:
    branches: ['main']
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  lint-build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install dependencies (pnpm)
        uses: ./.github/actions/pnpm-install

      - name: Lint JavaScript code
        run: pnpm lint

      - name: Lint styles
        run: pnpm lint:styles

      - name: Build all packages
        run: pnpm build:all

      - name: Run unit tests (coverage)
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        run: pnpm test:coverage

  storybook:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - project: 'core'
            e2e: true
          - project: 'widgets'
            e2e: true
          - project: 'templates'
            # templates does not have e2e tests
            e2e: false
          - project: 'infra-dash'
            e2e: false
    steps:
      - name: Checkout source code (${{ github.ref }})
        uses: actions/checkout@v4

      - name: Install dependencies (pnpm)
        uses: ./.github/actions/pnpm-install

      - name: Build all packages
        run: pnpm build:all

      - name: Install Chromium
        if: ${{ matrix.e2e }}
        run: npx playwright install chromium --with-deps

      - name: Run end-to-end tests
        if: ${{ matrix.e2e }}
        run: pnpm test:${{ matrix.project }}:e2e

      - name: Build Storybook
        if: ${{ matrix.e2e }}
        run: pnpm sb:build:${{ matrix.project }}

      - name: Run visual tests (Lost Pixel)
        if: ${{ matrix.e2e }}
        uses: lost-pixel/lost-pixel@v3.22.0
        env:
          LOST_PIXEL_API_KEY: ${{ secrets.LOST_PIXEL_API_KEY }}
          LOST_PIXEL_CONFIG_DIR: ./packages/${{ matrix.project }}

      - name: Install firebase tools
        if: ${{ github.ref == 'refs/heads/main' }}
        run: curl -sL https://firebase.tools | sed s/latest/v14.11.0/ | bash

      - name: Authenticate with Google Cloud
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: Deploy Storybook (${{ matrix.project }})
        if: ${{ github.ref == 'refs/heads/main' }}
        run: pnpm sb:deploy:${{ matrix.project }}

  lost-pixel-finalize:
    runs-on: ubuntu-latest
    needs: storybook
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Lost Pixel finalize
        uses: lost-pixel/lost-pixel@v3.22.0
        env:
          LOST_PIXEL_API_KEY: ${{ secrets.LOST_PIXEL_API_KEY }}
          # the final step needs to point to any of the monorepo lostpixel.config.js|ts
          # https://docs.lost-pixel.com/user-docs/recipes/lost-pixel-platform/monorepo#finalise-action
          LOST_PIXEL_CONFIG_DIR: ./packages/core
        with:
          FINALIZE: true

  deploy-storybook-root:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install dependencies (pnpm)
        uses: ./.github/actions/pnpm-install

      - name: Build all packages
        run: pnpm build:all

      - name: Install Vercel CLI
        run: pnpm i -g vercel@46

      - name: Deploy Storybook (root)
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_TOKEN_OCT2025: ${{ secrets.VERCEL_TOKEN_OCT2025 }}
        run: pnpm sb:deploy:root --yes --token=${{ env.VERCEL_TOKEN_OCT2025 }}

  deploy-fitness-dashboard:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install dependencies (pnpm)
        uses: ./.github/actions/pnpm-install

      - name: Install firebase tools
        run: curl -sL https://firebase.tools | sed s/latest/v14.11.0/ | bash

      - name: Build all packages
        run: pnpm build:all

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: Deploy fitness dashboard
        run: pnpm deploy:dashboard

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout...
        uses: actions/checkout@v3

      - name: Installing Node.js...
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: true

      - name: Getting pnpm store directory...
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Configuring the pnpm cache...
        id: cache-node-modules
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Installing dependencies...
        run: pnpm install

      - name: Getting node modules cache directory...
        shell: bash
        run: |
          echo "NODE_MODULES_CACHE_PATH=$(npm config get prefix)/node_modules" >> $GITHUB_ENV

      - name: "Installing firebase tools..."
        run: |
          npm install -g firebase-tools
          npm config get prefix
      
      - uses: actions/cache@v3
        name: Configuring the Firebase tools cache...
        id: firebase-tools-cache
        with:
          path: ${{ env.NODE_MODULES_CACHE_PATH }}
          key: ${{ runner.os }}-npm-store-
          restore-keys: |
            ${{ runner.os }}-npm-store-

  main:
    # needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout...
        uses: actions/checkout@v3

      - name: Installing Node.js...
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # - uses: pnpm/action-setup@v2
      #   with:
      #     version: 8
      #     run_install: true
      
      - name: Getting pnpm store directory...
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Restoring pnpm cache...
        # id: cache-node-modules
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Installing dependencies...
        run: pnpm install

      - name: Linting codebase...
        run: pnpm lint

      - name: Linting styles...
        run: pnpm lint:styles

      - name: Building packages...
        run: pnpm build:all

      - name: "Running unit tests..."
        run: pnpm test

      - name: "Installing firebase tools..."
        run: curl -sL https://firebase.tools | bash

  deploy-storybook-root:
    needs: main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Installing Node.js...
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: true

      - uses: actions/cache@v3
        name: Restoring Firebase tools cache...
        # id: firebase-tools-cache
        with:
          path: ${{ env.NODE_MODULES_CACHE_PATH }}
          key: ${{ runner.os }}-npm-store-
          restore-keys: |
            ${{ runner.os }}-npm-store-

      - name: "Deploying: storybook root"
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: pnpm sb:deploy:root --yes --token=${{ env.VERCEL_TOKEN }}
              
  deploy-storybook-fitness:
    needs: main
    runs-on: ubuntu-latest
    steps: 
      - name: Getting pnpm store directory...
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Restoring pnpm cache...
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      
      - uses: actions/cache@v3
        name: Restoring Firebase cache...
        with:
          path: ~/.npm-global/lib/node_modules
          key: ${{ runner.os }}-firebase-tools-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-firebase-tools-

      - name: "Deploying: storybook fitness"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: pnpm sb:deploy:fitness --token=${{ env.FIREBASE_TOKEN }}
    
  deploy-storybook-core:
    needs: main
    runs-on: ubuntu-latest
    steps:
      - name: Getting pnpm store directory...
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Restoring pnpm cache...
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      
      - uses: actions/cache@v3
        name: Restoring Firebase cache...
        with:
          path: ~/.npm-global/lib/node_modules
          key: ${{ runner.os }}-firebase-tools-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-firebase-tools-

      - name: "Deploying: storybook core"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: pnpm sb:deploy:core --token=${{ env.FIREBASE_TOKEN }}
  
  deploy-fitness-dashboard:
    needs: main
    runs-on: ubuntu-latest
    steps:
      - name: Getting pnpm store directory...
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Restoring pnpm cache...
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      
      - uses: actions/cache@v3
        name: Restoring Firebase cache...
        with:
          path: ~/.npm-global/lib/node_modules
          key: ${{ runner.os }}-firebase-tools-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-firebase-tools-

      - name: "Deploying: fitness dashboard"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: pnpm deploy:dashboard --token=${{ env.FIREBASE_TOKEN }}

  # lint:
  #   needs: cache-and-install
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Installing Node.js...
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
      
  #     - uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #         run_install: true
    
  #     - name: Getting pnpm store directory...
  #       shell: bash
  #       run: |
  #         echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

  #     - uses: actions/cache@v3
  #       name: Restoring the pnpm cache...
  #       with:
  #         path: ${{ env.STORE_PATH }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-

  #     - name: Linting codebase...
  #       run: pnpm lint

  #     - name: Linting styles...
  #       run: pnpm lint:styles
        
  # build:
  #   needs: cache-and-install
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3

  #     - name: Installing Node.js...
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
      
  #     - uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #         run_install: true

  #     - name: Getting pnpm store directory...
  #       shell: bash
  #       run: |
  #         echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

  #     - uses: actions/cache@v3
  #       name: Restoring the pnpm cache...
  #       with:
  #         path: ${{ env.STORE_PATH }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-
        
  #     - name: Building packages...
  #       run: pnpm build:all

  #     - name: Building storybook...
  #       run: pnpm sb:build:root

  #     - name: Zipping artifacts for deployment
  #       run: zip codebase.zip ./* -r -x "**/node_modules/*" -q

  #     - name: 'Uploading artifacts...'
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: codebase
  #         path: codebase.zip
  #         retention-days: 1

  # test:
  #   needs: build
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     #Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3

  #     - name: Installing Node.js...
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
      
  #     - uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #         run_install: true

  #     - name: Getting pnpm store directory...
  #       shell: bash
  #       run: |
  #         echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

  #     - uses: actions/cache@v3
  #       name: Configuring the pnpm cache...
  #       with:
  #         path: ${{ env.STORE_PATH }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-

  #     - name: Downloading build...
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: codebase

  #     - name: unzipping artifacts for deployment...
  #       run: unzip -n codebase.zip
              
  #     - name: "Running unit tests: UI Kit Core"
  #       run: pnpm test:core
              
  #     - name: "Running unit tests: UI Kit Utils"
  #       run: pnpm test:utils
    
  #     - name: "Running unit tests: UI Kit Hooks"
  #       run: pnpm test:hooks
  
  #     - name: "Running unit tests: UI Kit Widgets"
  #       run: pnpm test:widgets

  # deploy:
  #   needs: test
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     #Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3

  #     - name: Installing Node.js...
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
      
  #     - uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #         run_install: true

  #     - name: Getting pnpm store directory...
  #       shell: bash
  #       run: |
  #         echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

  #     - uses: actions/cache@v3
  #       name: Configuring the pnpm cache...
  #       with:
  #         path: ${{ env.STORE_PATH }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-

  #     - name: Downloading build...
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: codebase

  #     - name: unzipping artifacts for deployment...
  #       run: unzip -n codebase.zip
              
  #     - name: "Deploying: storybook root"
  #       run: pnpm sb:deploy:root
              
  #     - name: "Deploying: storybook fitness"
  #       run: pnpm sb:deploy:fitness
    
  #     - name: "Deploying: storybook core"
  #       run: pnpm sb:deploy:core
  
  #     - name: "Deploying: fitness dashboard"
  #       run: pnpm deploy:dashboard
